(window.webpackJsonp=window.webpackJsonp||[]).push([[608],{1013:function(t,a,_){"use strict";_.r(a);var s=_(58),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"最长回文子序列"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#最长回文子序列"}},[t._v("#")]),t._v(" 最长回文子序列")]),t._v(" "),_("h2",{attrs:{id:"题目"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[t._v("#")]),t._v(" 题目")]),t._v(" "),_("p",[t._v("给你一个字符串 s ，找出其中最长的回文子序列，并返回该序列的长度。")]),t._v(" "),_("p",[t._v("子序列定义为：不改变剩余字符顺序的情况下，删除某些字符或者不删除任何字符形成的一个序列。")]),t._v(" "),_("h2",{attrs:{id:"思路"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[t._v("#")]),t._v(" 思路")]),t._v(" "),_("p",[t._v("动规五部曲分析如下：")]),t._v(" "),_("h3",{attrs:{id:"_1-确定dp数组以及下标的含义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-确定dp数组以及下标的含义"}},[t._v("#")]),t._v(" 1.确定dp数组以及下标的含义")]),t._v(" "),_("p",[_("strong",[_("code",[t._v("dp[i][j]")]),t._v("：字符串s在[i, j]范围内最长的回文子序列的长度为"),_("code",[t._v("dp[i][j]")])]),t._v("。")]),t._v(" "),_("h3",{attrs:{id:"_2-确定递推公式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-确定递推公式"}},[t._v("#")]),t._v(" 2.确定递推公式")]),t._v(" "),_("p",[t._v("在判断回文子串的题目中，关键逻辑就是看s[i]与s[j]是否相同。")]),t._v(" "),_("p",[t._v("如果s[i]与s[j]相同，那么"),_("code",[t._v("dp[i][j] = dp[i + 1][j - 1] + 2;")])]),t._v(" "),_("p",[t._v("如图:")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/KeXiaoZhan/Images/image-20220518193718904.png",alt:"image-20220518193718904"}})]),t._v(" "),_("h3",{attrs:{id:"_3-dp数组如何初始化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-dp数组如何初始化"}},[t._v("#")]),t._v(" 3.dp数组如何初始化")]),t._v(" "),_("p",[t._v("首先要考虑当i 和j 相同的情况，从递推公式："),_("code",[t._v("dp[i][j] = dp[i + 1][j - 1] + 2;")]),t._v(" 可以看出 递推公式是计算不到 i 和j相同时候的情况。")]),t._v(" "),_("p",[t._v("所以需要手动初始化一下，当i与j相同，那么"),_("code",[t._v("dp[i][j]")]),t._v("一定是等于1的，即：一个字符的回文子序列长度就是1。")]),t._v(" "),_("p",[t._v("其他情况"),_("code",[t._v("dp[i][j]")]),t._v("初始为0就行，这样递推公式："),_("code",[t._v("dp[i][j] = max(dp[i + 1][j], dp[i][j - 1]);")]),t._v(" 中"),_("code",[t._v("dp[i][j]")]),t._v("才不会被初始值覆盖。")]),t._v(" "),_("h3",{attrs:{id:"_4-确定遍历顺序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-确定遍历顺序"}},[t._v("#")]),t._v(" 4.确定遍历顺序")]),t._v(" "),_("h3",{attrs:{id:"_5-举例推导dp数组"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-举例推导dp数组"}},[t._v("#")]),t._v(" 5.举例推导dp数组")]),t._v(" "),_("h2",{attrs:{id:"代码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[t._v("#")]),t._v(" 代码")])])}),[],!1,null,null,null);a.default=v.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[1151],{1555:function(s,o,t){"use strict";t.r(o);var e=t(58),_=Object(e.a)({},(function(){var s=this,o=s.$createElement,t=s._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"后端问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后端问题"}},[s._v("#")]),s._v(" 后端问题")]),s._v(" "),t("h2",{attrs:{id:"_1-restful的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-restful的原理"}},[s._v("#")]),s._v(" 1 RESTful的原理")]),s._v(" "),t("h2",{attrs:{id:"_2-重点-服务端渲染ssr及实现原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-重点-服务端渲染ssr及实现原理"}},[s._v("#")]),s._v(" 2.(重点)服务端渲染SSR及实现原理")]),s._v(" "),t("p",[s._v("https://juejin.cn/post/7046898330000949285#heading-0")]),s._v(" "),t("h3",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("p",[s._v("在日常前端开发中，在需要首屏渲染速度优化的场景下，大家或多或少都听到过服务端渲染( SSR )。本文将结合 Vue 来对 SSR 的实现逻辑来进行解读。通过阅读本文你将了解到:")]),s._v(" "),t("ul",[t("li",[s._v("服务端渲染的使用场景")]),s._v(" "),t("li",[s._v("Vue SSR 的实现原理")]),s._v(" "),t("li",[s._v("可开箱即用的 SSR 脚手架")])]),s._v(" "),t("h3",{attrs:{id:"服务端渲染"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务端渲染"}},[s._v("#")]),s._v(" 服务端渲染")]),s._v(" "),t("p",[s._v("服务端渲染 SSR (Server-Side Rendering)，是指在服务端完成页面的html 拼接处理， 然后再发送给浏览器，将不具有交互能力的html结构绑定事件和状态，在客户端展示为具有完整交互能力的应用程序。")]),s._v(" "),t("h2",{attrs:{id:"_3-重点-nestjs-nuxtjs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-重点-nestjs-nuxtjs"}},[s._v("#")]),s._v(" 3(重点)Nestjs，Nuxtjs")]),s._v(" "),t("p",[s._v("https://juejin.cn/post/7032079740982788132#heading-0")]),s._v(" "),t("h2",{attrs:{id:"_4-重点-介绍一下cookie-session-jwt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-重点-介绍一下cookie-session-jwt"}},[s._v("#")]),s._v(" 4.(重点)介绍一下Cookie Session JWT")]),s._v(" "),t("p",[s._v("https://juejin.cn/post/6844904034181070861#heading-0")]),s._v(" "),t("h3",{attrs:{id:"什么是-cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-cookie"}},[s._v("#")]),s._v(" 什么是 Cookie")]),s._v(" "),t("p",[t("strong",[s._v("HTTP 是无状态的协议（对于事务处理没有记忆能力，每次客户端和服务端会话完成时，服务端不会保存任何会话信息")]),s._v("）：每个请求都是完全独立的，服务端无法确认当前访问者的身份信息，无法分辨上一次的请求发送者和这一次的发送者是不是同一个人。"),t("font",{attrs:{color:"red",size:"3"}},[s._v("所以服务器与浏览器为了进行会话跟踪（知道是谁在访问我），就必须主动的去维护一个状态")]),s._v("，这个状态用于告知服务端前后两个请求是否来自同一浏览器。而"),t("font",{attrs:{color:"red",size:"3"}},[s._v("这个状态需要通过 cookie 或者 session 去实现")]),s._v("。")],1),s._v(" "),t("p",[t("strong",[s._v("cookie 存储在客户端：")]),s._v(" cookie 是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。")]),s._v(" "),t("p",[t("strong",[s._v("cookie 是不可跨域的：")]),s._v(" 每个 cookie 都会绑定单一的域名，无法在别的域名下获取使用，"),t("strong",[s._v("一级域名和二级域名之间是允许共享使用的")]),s._v("（"),t("strong",[s._v("靠的是 domain）")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"什么是-session"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-session"}},[s._v("#")]),s._v(" 什么是 Session")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("session 是另一种记录服务器和客户端会话状态的机制")])]),s._v(" "),t("li",[t("strong",[s._v("session 是基于 cookie 实现的，session 存储在服务器端，sessionId 会被存储到客户端的cookie 中")])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/29/16f523a04d0b3cf5~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp",alt:"session.png"}})]),s._v(" "),t("ul",[t("li",[s._v("session 认证流程：\n"),t("ul",[t("li",[s._v("用户第一次请求服务器的时候，服务器根据用户提交的相关信息，创建对应的 Session")]),s._v(" "),t("li",[s._v("请求返回时将此 Session 的唯一标识信息 SessionID 返回给浏览器")]),s._v(" "),t("li",[s._v("浏览器接收到服务器返回的 SessionID 信息后，会将此信息存入到 Cookie 中，同时 Cookie 记录此 SessionID 属于哪个域名")]),s._v(" "),t("li",[s._v("当用户第二次访问服务器的时候，请求会自动判断此域名下是否存在 Cookie 信息，如果存在自动将 Cookie 信息也发送给服务端，服务端会从 Cookie 中获取 SessionID，再根据 SessionID 查找对应的 Session 信息，如果没有找到说明用户没有登录或者登录失效，如果找到 Session 证明用户已经登录可执行后面操作。")])])])]),s._v(" "),t("p",[s._v("根据以上流程可知，"),t("strong",[s._v("SessionID 是连接 Cookie 和 Session 的一道桥梁")]),s._v("，大部分系统也是根据此原理来验证用户登录状态。")]),s._v(" "),t("h3",{attrs:{id:"cookie-和-session-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie-和-session-的区别"}},[s._v("#")]),s._v(" Cookie 和 Session 的区别")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("安全性：")]),s._v(" Session 比 Cookie 安全，Session 是存储在服务器端的，Cookie 是存储在客户端的。")]),s._v(" "),t("li",[t("strong",[s._v("存取值的类型不同")]),s._v("：Cookie 只支持存字符串数据，想要设置其他类型的数据，需要将其转换成字符串，Session 可以存任意数据类型。")]),s._v(" "),t("li",[t("strong",[s._v("有效期不同：")]),s._v(" Cookie 可设置为长时间保持，比如我们经常使用的默认登录功能，Session 一般失效时间较短，客户端关闭（默认情况下）或者 Session 超时都会失效。")]),s._v(" "),t("li",[t("strong",[s._v("存储大小不同：")]),s._v(" 单个 Cookie 保存的数据不能超过 4K，Session 可存储数据远高于 Cookie，但是当访问量过多，会占用过多的服务器资源。")])]),s._v(" "),t("h3",{attrs:{id:"什么是-token-令牌"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-token-令牌"}},[s._v("#")]),s._v(" 什么是 Token（令牌）")]),s._v(" "),t("h3",{attrs:{id:"acesss-token"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#acesss-token"}},[s._v("#")]),s._v(" Acesss Token")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("访问资源接口（API）时所需要的资源凭证")])]),s._v(" "),t("li",[t("strong",[s._v("简单 token 的组成：")]),s._v(" uid(用户唯一的身份标识)、time(当前时间的时间戳)、sign（签名，token 的前几位以哈希算法压缩成的一定长度的十六进制字符串）")]),s._v(" "),t("li",[s._v("特点：\n"),t("ul",[t("li",[t("strong",[s._v("服务端无状态化、可扩展性好")])]),s._v(" "),t("li",[t("strong",[s._v("支持移动端设备")]),s._v("（比如小程序是没有cookie存储的，需要放到localStorge中）")]),s._v(" "),t("li",[s._v("安全")]),s._v(" "),t("li",[s._v("支持跨程序调用")])])]),s._v(" "),t("li",[t("strong",[s._v("token 的身份验证流程：")])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/29/16f523a04d9c745f~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp",alt:"img"}})]),s._v(" "),t("p",[t("strong",[s._v("每一次请求都需要携带 token，需要把 token 放到 HTTP 的 Header 里")])]),s._v(" "),t("p",[t("strong",[t("font",{attrs:{color:"red",size:"3"}},[s._v("基于 token 的用户认证是一种服务端无状态的认证方式，服务端不用存放 token 数据。用解析 token 的计算时间换取 session 的存储空间，从而减轻服务器的压力，减少频繁的查询数据库")])],1)]),s._v(" "),t("p",[t("strong",[s._v("token 完全由应用管理，所以它可以避开同源策略")])]),s._v(" "),t("h3",{attrs:{id:"token-和-session-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#token-和-session-的区别"}},[s._v("#")]),s._v(" Token 和 Session 的区别")]),s._v(" "),t("p",[s._v("Session 是一种"),t("strong",[s._v("记录服务器和客户端会话状态的机制，使服务端有状态化，"),t("font",{attrs:{color:"red",size:"3"}},[s._v("可以记录会话信息")])],1),s._v("。而 Token 是"),t("strong",[s._v("令牌")]),s._v("，"),t("strong",[s._v("访问资源接口（API）时所需要的资源凭证")]),s._v("。Token "),t("strong",[s._v("使服务端无状态化，"),t("font",{attrs:{color:"red",size:"3"}},[s._v("不会存储会话信息。")])],1)]),s._v(" "),t("p",[s._v("Session 和 Token 并不矛盾，作为身份认证 Token 安全性比 Session 好，因为每一个请求都有签名还能防止监听以及重放攻击，而 Session 就必须依赖链路层来保障通讯安全了。"),t("strong",[s._v("如果你需要实现有状态的会话，仍然可以增加 Session 来在服务器端保存一些状态。")])]),s._v(" "),t("p",[s._v("所谓 Session 认证只是简单的把 User 信息存储到 Session 里，因为 SessionID 的不可预测性，暂且认为是安全的。而 Token ，如果指的是 OAuth Token 或类似的机制的话，提供的是 认证 和 授权 ，认证是针对用户，授权是针对 App 。其目的是让某 App 有权利访问某用户的信息。这里的 Token 是唯一的。不可以转移到其它 App上，也不可以转到其它用户上。Session 只提供一种简单的认证，即只要有此 SessionID ，即认为有此 User 的全部权利。是需要严格保密的，这个数据应该只保存在站方，不应该共享给其它网站或者第三方 App。所以简单来说："),t("strong",[s._v("如果你的用户数据可能需要和第三方共享，或者允许第三方调用 API 接口，用 Token 。如果永远只是自己的网站，自己的 App，用什么就无所谓了。")])]),s._v(" "),t("h3",{attrs:{id:"什么是jwt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是jwt"}},[s._v("#")]),s._v(" 什么是JWT")]),s._v(" "),t("p",[s._v("JSON Web Token（简称 JWT）是目前最流行的"),t("strong",[s._v("跨域认证")]),s._v("解决方案。")]),s._v(" "),t("p",[s._v("是一种"),t("strong",[s._v("认证授权机制")]),s._v("。")]),s._v(" "),t("p",[s._v("JWT 是为了在网络应用环境间"),t("strong",[s._v("传递声明")]),s._v("而执行的一种基于 JSON 的开放标准（"),t("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Ftools.ietf.org%2Fhtml%2Frfc7519",target:"_blank",rel:"noopener noreferrer"}},[s._v("RFC 7519"),t("OutboundLink")],1),s._v("）。JWT 的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源。比如用在用户登录上。")]),s._v(" "),t("p",[s._v("可以使用 HMAC 算法或者是 RSA 的公/私秘钥对 JWT 进行签名。因为数字签名的存在，这些传递的信息是可信的。")]),s._v(" "),t("h3",{attrs:{id:"jwt-的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jwt-的原理"}},[s._v("#")]),s._v(" JWT 的原理")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/29/16f523a04e881087~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp",alt:"img"}})]),s._v(" "),t("p",[t("strong",[s._v("JWT 认证流程：")])]),s._v(" "),t("ul",[t("li",[s._v("用户输入用户名/密码登录，服务端认证成功后，会返回给客户端一个 JWT")]),s._v(" "),t("li",[s._v("客户端将 token 保存到本地（通常使用 localstorage，也可以使用 cookie）")]),s._v(" "),t("li",[s._v("当用户希望访问一个受保护的路由或者资源的时候，需要请求头的 Authorization 字段中使用Bearer 模式添加 JWT，其内容看起来是下面这样")])]),s._v(" "),t("h3",{attrs:{id:"token-和-jwt-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#token-和-jwt-的区别"}},[s._v("#")]),s._v(" Token 和 JWT 的区别")]),s._v(" "),t("p",[t("strong",[s._v("相同：")])]),s._v(" "),t("ul",[t("li",[s._v("都是访问资源的令牌")]),s._v(" "),t("li",[s._v("都可以记录用户的信息")]),s._v(" "),t("li",[s._v("都是使服务端无状态化")]),s._v(" "),t("li",[s._v("都是只有验证成功后，客户端才能访问服务端上受保护的资源")])]),s._v(" "),t("p",[t("strong",[s._v("区别：")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Token："),t("font",{attrs:{color:"red",size:"3"}},[s._v("服务端验证客户端发送过来的 Token 时，还需要查询数据库获取用户信息，然后验证 Token 是否有效")]),s._v("。")],1)]),s._v(" "),t("li",[t("p",[s._v("JWT： "),t("font",{attrs:{color:"red",size:"3"}},[s._v("将 Token 和 Payload 加密后存储于客户端，服务端只需要使用密钥解密进行校验（校验也是 JWT 自己实现的）即可")]),s._v("，不需要查询或者减少查询数据库，因为 JWT 自包含了用户信息和加密的数据。")],1)]),s._v(" "),t("li",[t("p",[s._v("数据库百万条数据，有几种语文，数学，计算平均分，排序出来，如何解决")])]),s._v(" "),t("li",[t("p",[s._v("后台有注解，前端有吗？装饰器用过吗？")])]),s._v(" "),t("li",[t("p",[s._v("关系型和非关系型数据库")])]),s._v(" "),t("li",[t("p",[s._v("数据库的索引的原理和用法")])]),s._v(" "),t("li",[t("p",[s._v("数据库的事务知道吗？")])]),s._v(" "),t("li",[t("p",[s._v("连接查询有哪些方式？")])]),s._v(" "),t("li",[t("p",[s._v("你知道Java为啥能够运行在几乎所有系统上吗？")])]),s._v(" "),t("li",[t("p",[s._v("linux相关操作（查看进程用ps）")])]),s._v(" "),t("li",[t("p",[s._v("mysql跟mongondb的不同")])]),s._v(" "),t("li",[t("p",[s._v("数据库优化方法")])]),s._v(" "),t("li",[t("p",[s._v("pm2查看日志的命令")])]),s._v(" "),t("li",[t("p",[s._v("koa的底层原理")])]),s._v(" "),t("li",[t("p",[s._v("koa的洋葱模型，和express有什么区别")])]),s._v(" "),t("li",[t("p",[s._v("事务的原理了解吗")])]),s._v(" "),t("li",[t("p",[s._v("什么是内外连接")])]),s._v(" "),t("li",[t("p",[s._v("索引了解吗，为什么索引能加快速度")])]),s._v(" "),t("li",[t("p",[s._v("同步和异步的区别")])]),s._v(" "),t("li",[t("p",[s._v("如果有六百万名考生的高考成绩要排序应该怎么做")])]),s._v(" "),t("li",[t("p",[s._v("web服务用过哪些？")])]),s._v(" "),t("li",[t("p",[s._v("你提到了nginx，有做过一些负载均衡吗？")])])])])}),[],!1,null,null,null);o.default=_.exports}}]);
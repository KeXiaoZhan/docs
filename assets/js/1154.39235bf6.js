(window.webpackJsonp=window.webpackJsonp||[]).push([[1154],{1563:function(n,s,e){"use strict";e.r(s);var a=e(58),t=Object(a.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"手撕"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手撕"}},[n._v("#")]),n._v(" 手撕")]),n._v(" "),e("h2",{attrs:{id:"手写gettype函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手写gettype函数"}},[n._v("#")]),n._v(" 手写getType函数")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/KeXiaoZhan/Images/image-20230222161921998.png",alt:"image-20230222161921998"}})]),n._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/KeXiaoZhan/Images/image-20230222161940020.png",alt:"image-20230222161940020"}})]),n._v(" "),e("h2",{attrs:{id:"深度优先遍历一个dom树"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#深度优先遍历一个dom树"}},[n._v("#")]),n._v(" 深度优先遍历一个DOM树")]),n._v(" "),e("h2",{attrs:{id:"手写convert函数-将数组转为树"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手写convert函数-将数组转为树"}},[n._v("#")]),n._v(" 手写convert函数，将数组转为树")]),n._v(" "),e("ul",[e("li",[n._v("数据绑定实现【框架和抛开框架，手撕】")]),n._v(" "),e("li",[n._v("排序数组，查询某个值，存在则返回索引，不存在返回插入位置；优化，for~二分 【手撕】")]),n._v(" "),e("li",[n._v("js实现阶乘")]),n._v(" "),e("li",[n._v("创建一个 Person 类，其包含公有属性 name 和私有属性 age 以及公有方法 setAge ；创建一个 Teacher 类，使其继承 Person ，并包含私有属性 studentCount 和私有方法 setStudentCount")]),n._v(" "),e("li",[n._v("实现一个类似百度输入框的功能，根据用户的输入，找出一个数组中匹配到的数显示出来")]),n._v(" "),e("li",[n._v("一个输入框实现百度搜索那样的autocomplete效果")]),n._v(" "),e("li",[n._v("请写一个函数，计算一篇英文文章中出现次数最多的单词及出现次数")]),n._v(" "),e("li",[n._v("怎么用js实现队列")]),n._v(" "),e("li",[n._v("js观察者模式")]),n._v(" "),e("li",[n._v("数组扁平化")]),n._v(" "),e("li",[n._v("实现一个实数的堆栈，使得其 push pop max 方法的时间复杂度为 O(1)")]),n._v(" "),e("li",[n._v("有一个整数二维数组，每行的元素个数不同，输出它的全排列，同一行的数互斥。要求不使用递归完成")]),n._v(" "),e("li",[n._v("实现一个函数，检查二叉树是否平衡。")]),n._v(" "),e("li",[n._v("实现一个 Http 请求池，需要能够限制并发数")]),n._v(" "),e("li",[n._v("合并二叉树")]),n._v(" "),e("li",[n._v("奇偶链表")]),n._v(" "),e("li",[n._v("使用闭包实现变量自加一")]),n._v(" "),e("li",[n._v("双向链表转二叉树，二叉树转双向链表")]),n._v(" "),e("li",[n._v("url正则匹配")]),n._v(" "),e("li",[n._v("nlogn排序算法有哪些，快排稳定么")]),n._v(" "),e("li",[n._v("构建排序二叉树")]),n._v(" "),e("li",[n._v("搜索二叉树找第k大的数")]),n._v(" "),e("li",[n._v("手写原生ajax，new XMLHttpRequest()")]),n._v(" "),e("li",[n._v("手写对象深拷贝")]),n._v(" "),e("li",[n._v("获取标签名称为div的元素的个数，并且判断是不是数组，考察类型判断")]),n._v(" "),e("li",[n._v("给两个构造函数A和B，如何实现A继承B")]),n._v(" "),e("li",[n._v("用户权限认证过程")]),n._v(" "),e("li",[n._v("写个模块导出的案例")]),n._v(" "),e("li",[n._v("说下异步的问题，写个promise的使用小案例")]),n._v(" "),e("li",[n._v("拖拽代码 (手写)")]),n._v(" "),e("li",[n._v("手撕代码：大数相乘")]),n._v(" "),e("li",[n._v("手撕代码：函数无限柯里化（有n个参数，函数调用n+1次得到结果）")]),n._v(" "),e("li",[n._v("手撕代码：实现一个轮询器，主要考察Promise")]),n._v(" "),e("li",[n._v("用es5的let实现一个闭包")]),n._v(" "),e("li",[n._v("继承（实现私有属性和私有方法）")]),n._v(" "),e("li",[n._v("设计实现一个固定执行顺序的script加载")]),n._v(" "),e("li",[n._v("手写代码题：找出字符串中出现次数最多的字符及出现次数")]),n._v(" "),e("li",[n._v("编程题（对输入的一段字符串（有逗号 有回车，挑出其中的数字，然后求和，求和之后再把数中的奇数加） 1.正则做法 2.字符串遍历做法，挑出数字 ， 换行，再按换行分割，再按，号分割，数组扁平，求和，变字符串，遍历")]),n._v(" "),e("li",[n._v("数组去重手写，越多越好")]),n._v(" "),e("li",[n._v("将一个平铺的数组用js写成树的结构")]),n._v(" "),e("li",[n._v("完成函数的实现，使得它可以实现达到 "),e("code",[n._v("Array.prototype.forEach")]),n._v(" 相同的功能")]),n._v(" "),e("li",[n._v("看下面代码执行结果，说明原因")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\nsetTimeout(()=>{\n\tconsole.log(4);\n})\n\nnew Promise(resolve=>{\n\tresolve();\n\tconsole.log(1);\n}).then(()=>{\n\tconsole.log(3);\n})\n\nconsole.log(2);\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br")])]),e("ul",[e("li",[e("a",{attrs:{href:"https://img-blog.csdnimg.cn/20210106165903412.png",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/KeXiaoZhan/Images/20210106165903412.png",alt:"img"}}),e("OutboundLink")],1)]),n._v(" "),e("li",[n._v("token过期怎么做")]),n._v(" "),e("li",[n._v("怎么知道用户和token的对应关系")]),n._v(" "),e("li",[n._v("token和cookie区别")]),n._v(" "),e("li",[n._v("token为什么比cookie更不容易受到攻击，为什么要用cookie")]),n._v(" "),e("li",[n._v("手撕Event bus")]),n._v(" "),e("li",[n._v("手撕函数组合")]),n._v(" "),e("li",[n._v("手撕对象扁平化")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('\n请实现 flatten(input) 函数，input 为一个 javascript 对象（Object 或者 Array），返回值为扁平化后的结果。\n * 示例：\n *   var input = {\n *     a: 1,\n *     b: [ 1, 2, { c: true }, [ 3 ] ],\n *     d: { e: 2, f: 3 },\n *     g: null, \n *   }\n *   var output = flatten(input);\n *   output如下\n *   {\n *     "a": 1,\n *     "b[0]": 1,\n *     "b[1]": 2,\n *     "b[2].c": true,\n *     "b[3][0]": 3,\n *     "d.e": 2,\n *     "d.f": 3,\n *     // "g": null,  值为null或者undefined，丢弃\n *  }\n */\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br")])]),e("ul",[e("li",[n._v("给列表中的li（里面是a标签）绑定点击事件，点击时弹出其在列表中的顺序（页面不跳转）")]),n._v(" "),e("li",[n._v("JS实现一个JSON.stringify()功能的函数")]),n._v(" "),e("li",[n._v("三次重试：假设有一个函数名为job,调用job后会执行一些异步任务，并返回一个Promise,但job执行的异步任务任务有可能会失败\n请实现函数retry,把job作为retry函数的参数传入，当retry执行后会尝试调用job,如果job返回成功（即Promise fulfilled），则retry函数返回job函数的返回内容；\n如果job返回失败（即Promise rejected）,retry函数会再次尝试调用job函数。\n如果job连续三次均返回失败，retry则不再尝试调用，并返回其最后一次失败的内容。")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\nfunction job() {\n           return new Promise(function (resolve, reject) {\n               setTimeout(function () {\n                   var num = Math.ceil(Math.random() * 20); //生成1-10的随机数\n                   console.log('随机数生成的值：', num)\n                   if (num <= 1) {\n                       console.log('符合条件，值为' + num)\n                       resolve(num);\n                   }\n                   else {\n                       reject('数字大于1了执行失败');\n                   }\n               }, 2000);\n           })\n       }\n\n       function retry(job, times, delay) {\n           return new Promise(function(resolve, reject){\n               function attempt() {\n                   job().then(num => {\n                       resolve(num);\n                   }).catch(function (err) {\n                       console.log('还有', times - 1, '次尝试');\n                       if (0 == times - 1) {\n                           reject(err);\n                       } else {\n                           times--;\n                           setTimeout(attempt(), delay);\n                       }\n                   })\n               }\n               attempt();\n           })\n       }\n\n       retry(job, 3, 1000).then(result => {\n           console.log(result);\n       }).catch(err => { console.log(err); });\n\nfunction job() {\n         return new Promise(function (resolve, reject) {\n             setTimeout(function () {\n                 var num = Math.ceil(Math.random() * 20); //生成1-10的随机数\n                 console.log('随机数生成的值：', num)\n                 if (num <= 10) {\n                     console.log('符合条件，值为' + num)\n                     resolve(num);\n                 }\n                 else {\n                     reject('数字大于10了执行失败');\n                 }\n             }, 2000);\n         })\n     }\n\n     async function retry(job, times) {\n         for (let i = 0; i < times; i++) {\n             try {\n                 return await job();\n                 break;\n             } catch(err){\n                 if(i == times-1){\n                     return err;\n                 }\n             }\n             finally {\n                 console.log('还有', times - i - 1, '次机会');\n             }\n         }\n     }\n\n     retry(job, 3).then(num => { console.log(num) })\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br"),e("span",{staticClass:"line-number"},[n._v("61")]),e("br"),e("span",{staticClass:"line-number"},[n._v("62")]),e("br"),e("span",{staticClass:"line-number"},[n._v("63")]),e("br"),e("span",{staticClass:"line-number"},[n._v("64")]),e("br"),e("span",{staticClass:"line-number"},[n._v("65")]),e("br"),e("span",{staticClass:"line-number"},[n._v("66")]),e("br"),e("span",{staticClass:"line-number"},[n._v("67")]),e("br"),e("span",{staticClass:"line-number"},[n._v("68")]),e("br"),e("span",{staticClass:"line-number"},[n._v("69")]),e("br"),e("span",{staticClass:"line-number"},[n._v("70")]),e("br"),e("span",{staticClass:"line-number"},[n._v("71")]),e("br"),e("span",{staticClass:"line-number"},[n._v("72")]),e("br"),e("span",{staticClass:"line-number"},[n._v("73")]),e("br")])]),e("ul",[e("li",[n._v("给了一个代码片段，大概就是一个产生随机数的for循环，然后把这个随机数当作参数传到一个异步函数，问怎么保证输出顺序也是有序的，其实就是类似于同时发送几个http请求，怎么保证响应顺序也按照请求顺序依次返回")]),n._v(" "),e("li",[n._v("写了个类型判断函数")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('\nfunction getType(param) {\n    const type = Object.prototype.toString.call(param).slice(8, -1);\n    if (type === "Object") {\n        return param.constructor.name;\n    } else {\n        return type;\n    }\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br")])]),e("ul",[e("li",[n._v("遍历根结点下所有子节点")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\nfunction traverseDom(root) {\n    let result = [];\n    let queue = [root];\n    while (queue.length) {\n        let cur = queue.shift();\n        result.push(cur);\n        for (let i = 0; i < cur.children.length; i++) {\n            queue.push(cur.children[i]);\n        }\n    }\n    return result;\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br")])]),e("ul",[e("li",[n._v("实现页脚在内容最底部\n"),e("a",{attrs:{href:"https://img-blog.csdnimg.cn/20210107092724752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyOTcxOA==,size_16,color_FFFFFF,t_70",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/KeXiaoZhan/Images/20210107092724752.png",alt:"img"}}),e("OutboundLink")],1)])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('\n<!DOCTYPE html><html lang="en"><head>    <meta charset="UTF-8">    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <title>Document</title>    <style>        * {            margin: 0;        }                html,        body {            height: 100%;        }                .container {            min-height: 100%;        }                .content {            background: goldenrod;            color: white;            text-align: center;        }                .placeholder {            height: 50px;        }                .footer {            height: 50px;            background: greenyellow;            margin-top: -50px;        }    </style></head><body>    <div class="container">        <div class="content">我是内容</div>        <div class="placeholder"></div>    </div>    <div class="footer"></div></body></html>\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[576],{988:function(t,s,a){"use strict";a.r(s);var n=a(58),p=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_0-1背包理论基础-二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-1背包理论基础-二"}},[t._v("#")]),t._v(" 0-1背包理论基础(二)")]),t._v(" "),a("p",[t._v("今天我们就来说一说滚动数组，其实在前面的题目中我们已经用到过滚动数组了，就是把二维dp降为一维dp，一些录友当时还表示比较困惑。")]),t._v(" "),a("p",[t._v("那么我们通过01背包，来彻底讲一讲滚动数组！")]),t._v(" "),a("p",[t._v("接下来还是用如下这个例子来进行讲解")]),t._v(" "),a("p",[t._v("背包最大重量为4。")]),t._v(" "),a("p",[t._v("物品为：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("重量")]),t._v(" "),a("th",[t._v("价值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("物品0")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("15")])]),t._v(" "),a("tr",[a("td",[t._v("物品1")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("20")])]),t._v(" "),a("tr",[a("td",[t._v("物品2")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("30")])])])]),t._v(" "),a("p",[t._v("问背包能背的物品最大价值是多少？")]),t._v(" "),a("h2",{attrs:{id:"一维dp数组-滚动数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一维dp数组-滚动数组"}},[t._v("#")]),t._v(" 一维dp数组（滚动数组）")]),t._v(" "),a("p",[t._v("对于背包问题其实状态都是可以压缩的。")]),t._v(" "),a("p",[t._v("在使用二维数组的时候，递推公式："),a("code",[t._v("dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]);")])]),t._v(" "),a("p",[a("strong",[a("font",{attrs:{color:"red",size:"3"}},[t._v("其实可以发现如果把dp[i - 1]那一层拷贝到dp[i]上，表达式完全可以是(因为重量还是j，多了个物品并不影响我重量j还是那个价值)")]),t._v("："),a("code",[t._v("dp[i][j] = max(dp[i][j], dp[i][j - weight[i]] + value[i]);")])],1)]),t._v(" "),a("p",[a("strong",[t._v("与其把dp[i - 1]这一层拷贝到dp[i]上，不如只用一个一维数组了")]),t._v("，"),a("font",{attrs:{color:"red",size:"3"}},[t._v("只用dp[j]（一维数组，也可以理解是一个滚动数组）")]),t._v("。")],1),t._v(" "),a("p",[t._v("这就是滚动数组的由来，需要满足的条件是上一层可以重复利用，直接拷贝到当前层。")]),t._v(" "),a("p",[t._v("读到这里估计大家都忘了"),a("code",[t._v("dp[i][j]")]),t._v("里的i和j表达的是什么了，i是物品，j是背包容量。")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("dp[i][j]")]),t._v("表示从下标为[0-i]的物品里任意取，放进容量为j的背包，价值总和最大是多少")]),t._v("。")]),t._v(" "),a("p",[t._v("一定要时刻记住这里i和j的含义，要不然很容易看懵了。")]),t._v(" "),a("p",[t._v("动规五部曲分析如下：")]),t._v(" "),a("h3",{attrs:{id:"_1-确定dp数组的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-确定dp数组的定义"}},[t._v("#")]),t._v(" 1.确定dp数组的定义")]),t._v(" "),a("p",[t._v("在一维dp数组中，dp[j]表示：容量为j的背包，所背的物品价值可以最大为dp[j]。")]),t._v(" "),a("h3",{attrs:{id:"_2-一维dp数组的递推公式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-一维dp数组的递推公式"}},[t._v("#")]),t._v(" 2.一维dp数组的递推公式")]),t._v(" "),a("p",[t._v("dp[j]为 容量为j的背包所背的最大价值，那么如何推导dp[j]呢？")]),t._v(" "),a("p",[t._v("dp[j]可以通过"),a("code",[t._v("dp[j - weight[i]]")]),t._v("推导出来，"),a("code",[t._v("dp[j - weight[i]]")]),t._v("表示容量为j - weight[i]的背包所背的最大价值。")]),t._v(" "),a("p",[a("code",[t._v("dp[j - weight[i]] + value[i]")]),t._v("表示 容量为 j - 物品i重量 的背包 加上 物品i的价值。（也就是容量为j的背包，放入物品i了之后的价值即：dp[j]）")]),t._v(" "),a("p",[t._v("此时dp[j]有两个选择，一个是取自己dp[j] 相当于 二维dp数组中的"),a("code",[t._v("dp[i-1][j]")]),t._v("，即不放物品i，一个是取"),a("code",[t._v("dp[j - weight[i]] + value[i]")]),t._v("，即放物品i，指定是取最大的，毕竟是求最大价值，")]),t._v(" "),a("p",[t._v("所以递归公式为：")]),t._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("dp[j] = max(dp[j], dp[j - weight[i]] + value[i]);\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("可以看出相对于二维dp数组的写法，就是把"),a("code",[t._v("dp[i][j]")]),t._v("中i的维度去掉了。")]),t._v(" "),a("h3",{attrs:{id:"_3-一维dp数组如何初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-一维dp数组如何初始化"}},[t._v("#")]),t._v(" 3.一维dp数组如何初始化")]),t._v(" "),a("p",[a("strong",[t._v("关于初始化，一定要和dp数组的定义吻合，否则到递推公式的时候就会越来越乱")]),t._v("。")]),t._v(" "),a("p",[t._v("dp[j]表示：容量为j的背包，所背的物品价值可以最大为dp[j]，那么dp[0]就应该是0，因为背包容量为0所背的物品的最大价值就是0。")]),t._v(" "),a("p",[t._v("那么dp数组除了下标0的位置，初始为0，其他下标应该初始化多少呢？")]),t._v(" "),a("p",[t._v("看一下递归公式：dp[j] = max(dp[j], dp[j - weight[i]] + value[i]);")]),t._v(" "),a("p",[t._v("dp数组在推导的时候一定是取价值最大的数，如果题目给的价值都是正整数那么非0下标都初始化为0就可以了。")]),t._v(" "),a("p",[a("strong",[t._v("这样才能让dp数组在递归公式的过程中取的最大的价值，而不是被初始值覆盖了")]),t._v("。")]),t._v(" "),a("p",[t._v("那么我假设物品价值都是大于0的，所以dp数组初始化的时候，都初始为0就可以了。")]),t._v(" "),a("h3",{attrs:{id:"_4-一维dp数组遍历顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-一维dp数组遍历顺序"}},[t._v("#")]),t._v(" 4.一维dp数组遍历顺序")]),t._v(" "),a("p",[t._v("代码如下：")]),t._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("for(int i = 0; i &lt; weight.size(); i++) { // 遍历物品\n    for(int j = bagWeight; j >= weight[i]; j--) { // 遍历背包容量\n        dp[j] = max(dp[j], dp[j - weight[i]] + value[i]);\n\n    }\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[a("strong",[t._v("这里大家发现和二维dp的写法中，遍历背包的顺序是不一样的！")])]),t._v(" "),a("p",[t._v("二维dp遍历的时候，背包容量是从小到大，而一维dp遍历的时候，背包是从大到小。")]),t._v(" "),a("p",[t._v("为什么呢？")]),t._v(" "),a("p",[a("strong",[t._v("倒序遍历是为了保证物品i只被放入一次！")]),t._v("。但如果一旦正序遍历了，那么物品0就会被重复加入多次！")]),t._v(" "),a("p",[t._v("举一个例子：物品0的重量weight[0] = 1，价值value[0] = 15")]),t._v(" "),a("p",[t._v("如果正序遍历"),a("font",{attrs:{color:"red",size:"3"}},[t._v("(题目给出的weight[0]重量为1)")])],1),t._v(" "),a("p",[t._v("dp[1] = dp[1 - weight[0]] + value[0] = 15")]),t._v(" "),a("p",[t._v("dp[2] = dp[2 - weight[0]] + value[0] = 30 = "),a("font",{attrs:{color:"red",size:"3"}},[t._v("dp[1] + value[0]")])],1),t._v(" "),a("p",[t._v("此时dp[2]就已经是30了，意味着物品0，被放入了两次，所以"),a("font",{attrs:{color:"red",size:"3"}},[t._v("不能正序遍历")]),t._v("。")],1),t._v(" "),a("p",[t._v("为什么倒序遍历，就可以保证物品只放入一次呢？")]),t._v(" "),a("p",[t._v("倒序就是先算dp[2]")]),t._v(" "),a("p",[t._v("dp[2] = dp[2 - weight[0]] + value[0] = 15  （dp数组已经都初始化为0）")]),t._v(" "),a("p",[t._v("dp[1] = dp[1 - weight[0]] + value[0] = 15")]),t._v(" "),a("p",[t._v("所以"),a("font",{attrs:{color:"red",size:"3"}},[t._v("从后往前循环，每次取得状态不会和之前取得状态重合")]),t._v("，这样每种物品就只取一次了。")],1),t._v(" "),a("p",[a("strong",[t._v("那么问题又来了，为什么二维dp数组历的时候不用倒序呢？")])]),t._v(" "),a("p",[t._v("因为对于二维dp，"),a("code",[t._v("dp[i][j]")]),t._v("都是通过上一层即"),a("code",[t._v("dp[i - 1][j]")]),t._v("计算而来，本层的"),a("code",[t._v("dp[i][j]")]),t._v("并不会被覆盖！")]),t._v(" "),a("p",[t._v("（如何这里读不懂，大家就要动手试一试了，空想还是不靠谱的，实践出真知！）")]),t._v(" "),a("p",[a("strong",[t._v("再来看看两个嵌套for循环的顺序，"),a("font",{attrs:{color:"red",size:"3"}},[t._v("代码中是先遍历物品嵌套遍历背包容量，那可不可以先遍历背包容量嵌套遍历物品呢？")])],1)]),t._v(" "),a("p",[a("font",{attrs:{color:"orange",size:"3"}},[a("strong",[t._v("不可以！")])])],1),t._v(" "),a("p",[t._v("因为一维dp的写法，背包容量一定是要倒序遍历（原因上面已经讲了），如果遍历背包容量放在上一层，那么每个dp[j]就只会放入一个物品，即：背包里只放入了一个物品。")]),t._v(" "),a("p",[t._v("（这里如果读不懂，就在回想一下dp[j]的定义，或者就把两个for循环顺序颠倒一下试试！）")]),t._v(" "),a("p",[a("strong",[t._v("所以一维dp数组的背包在遍历顺序上和二维其实是有很大差异的！")]),t._v("，这一点大家一定要注意。")]),t._v(" "),a("h3",{attrs:{id:"_5-举例推导dp数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-举例推导dp数组"}},[t._v("#")]),t._v(" 5.举例推导dp数组")]),t._v(" "),a("p",[t._v("一维dp，分别用物品0，物品1，物品2 来遍历背包，最终得到结果如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/KeXiaoZhan/Images/image-20220507154130377.png",alt:"image-20220507154130377"}})]),t._v(" "),a("h2",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[a("font",{attrs:{color:"green",size:"3"}},[t._v("总之，对于0-1背包不管是使用一维还是二维，你都先遍历物品，再遍历容量便不会出错，另外，遍历一维的容量时还要后序遍历防止重复使用同一物品")])],1),t._v(" "),a("h2",{attrs:{id:"一维dp01背包完整c-测试代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一维dp01背包完整c-测试代码"}},[t._v("#")]),t._v(" 一维dp01背包完整C++测试代码")]),t._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_1_wei_bag_problem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" weight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" bagWeight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化")]),t._v("\n    vector"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bagWeight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" weight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历物品")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bagWeight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" weight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历背包容量")]),t._v("\n            dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" weight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bagWeight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_1_wei_bag_problem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br")])]),a("p",[t._v("可以看出，一维dp 的01背包，要比二维简洁的多！ 初始化 和 遍历顺序相对简单了。")]),t._v(" "),a("p",[a("strong",[t._v("所以我倾向于使用一维dp数组的写法，比较直观简洁，而且空间复杂度还降了一个数量级！")])]),t._v(" "),a("p",[a("strong",[t._v("在后面背包问题的讲解中，我都直接使用一维dp数组来进行推导")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("以上的讲解可以开发一道面试题目（毕竟力扣上没原题）。")]),t._v(" "),a("p",[t._v("就是本文中的题目，要求先实现一个纯二维的01背包，如果写出来了，然后再问为什么两个for循环的嵌套顺序这么写？反过来写行不行？再讲一讲初始化的逻辑。")]),t._v(" "),a("p",[t._v("然后要求实现一个一维数组的01背包，最后再问，一维数组的01背包，两个for循环的顺序反过来写行不行？为什么？")]),t._v(" "),a("p",[t._v("注意以上问题都是在候选人把代码写出来的情况下才问的。")]),t._v(" "),a("p",[t._v("就是纯01背包的题目，都不用考01背包应用类的题目就可以看出候选人对算法的理解程度了。")]),t._v(" "),a("p",[a("strong",[t._v("相信大家读完这篇文章，应该对以上问题都有了答案！")])]),t._v(" "),a("p",[t._v("此时01背包理论基础就讲完了，我用了两篇文章把01背包的dp数组定义、递推公式、初始化、遍历顺序从二维数组到一维数组统统深度剖析了一遍，没有放过任何难点。")]),t._v(" "),a("p",[t._v("大家可以发现其实信息量还是挺大的。")]),t._v(" "),a("p",[t._v("如果把"),a("a",{attrs:{href:"https://programmercarl.com/%E8%83%8C%E5%8C%85%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%8001%E8%83%8C%E5%8C%85-1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("动态规划：关于01背包问题，你该了解这些！"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://programmercarl.com/%E8%83%8C%E5%8C%85%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%8001%E8%83%8C%E5%8C%85-1.html",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://programmercarl.com/%E8%83%8C%E5%8C%85%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%8001%E8%83%8C%E5%8C%85-1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v(" (opens new window)"),a("OutboundLink")],1),t._v("和本篇的内容都理解了，后面我们在做01背包的题目，就会发现非常简单了。")]),t._v(" "),a("p",[t._v("不用再凭感觉或者记忆去写背包，而是有自己的思考，了解其本质，代码的方方面面都在自己的掌控之中。")]),t._v(" "),a("p",[t._v("即使代码没有通过，也会有自己的逻辑去debug，这样就思维清晰了。")]),t._v(" "),a("p",[t._v("接下来就要开始用这两天的理论基础去做力扣上的背包面试题目了，录友们握紧扶手，我们要上高速啦！")]),t._v(" "),a("h2",{attrs:{id:"代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[t._v("#")]),t._v(" 代码")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testWeightBagProblem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("wight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" len "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    dp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" wight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" wight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testWeightBagProblem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])])])}),[],!1,null,null,null);s.default=p.exports}}]);